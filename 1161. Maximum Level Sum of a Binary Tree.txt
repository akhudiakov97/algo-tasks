/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    //vector<int> s(34, 0);
        vector<int> s = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};    
    void traverse(TreeNode* p, int level=1){
        //if(s.size()<level) s.push_back(0);
        s[level-1] += p->val;
        if(p->left)  traverse(p->left,  level+1);
        if(p->right) traverse(p->right, level+1);        
    }
    int maxLevelSum(TreeNode* root) {
        traverse(root);        
               
        //return distance(s.begin(), max_element(s.begin(), s.end()))+1;
            int n, maxx = 0;
            for(int i=0; i<s.size(); i++) 
            {
                if(s[i]>maxx)
                {
                    maxx = s[i];
                    n = i + 1;
                }
            }
            return n;        
    }
};